spring:
  main:
    allow-bean-definition-overriding: true
  #配置 Jpa
  jpa:
    hibernate:
      # 生产环境设置成 none，避免程序运行时自动更新数据库结构
      ddl-auto: none
  datasource:
    druid:
#      type: rules.alibaba.druid.pool.DruidDataSource
#      driverClassName: rules.mysql.jdbc.Driver
#      url: jdbc:log4jdbc:mysql://localhost:3306/ds0?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
#      username: root
#      password: 123456

      # 初始化连接大小
      initial-size: 5
      # 最小空闲连接数
      min-idle: 5
      max-active: 20
      max-wait: 30000
      # 可关闭的空闲连接间隔时间
      time-between-eviction-runs-millis: 60000
      # 配置连接在池中的最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: select '1' from dual
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters
      filters: stat

      stat-view-servlet:
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: 123456

      web-stat-filter:
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
sharding:
  jdbc:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: rules.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?createDatabaseIfNotExist=true
        username: root
        password: 123456
        #最大连接数
        maxPoolSize: 20
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: rules.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds1?createDatabaseIfNotExist=true
        username: root
        password: 123456
        #最大连接数
        maxPoolSize: 20
    config:
      sharding:
        default-data-source-name: ds0
        binding-tables[0]: order_info,order_item
        props:
          sql.show: true
        tables:
          order_info:  #order_info表
            key-generator-column-name: oid  #主键
            actual-data-nodes: ds$->{0..1}.order_info$->{0..1}  #数据节点
            database-strategy:  #分库策略
              inline:
                sharding-column: uid
                algorithm-expression: ds$->{uid % 2}
            table-strategy:  #分表策略
              inline:
                sharding-column: oid
                algorithm-expression: order_info$->{oid % 2}
          order_item:
            key-generator-column-name: itemId
            actual-data-nodes: ds$->{0..1}.order_item$->{0..1}
            database-strategy:
              inline:
                shardingColumn: oid
                algorithm-expression: order_item$->{oid % 2}

#jwt
jwt:
  header: Authorization
  secret: mySecret
  # token 过期时间 2个小时
  expiration: 7200000
  auth:
    # 授权路径
    path: /login
    # 获取用户信息
    account: /info

#是否允许生成代码，生产环境设置为false
generator:
  enabled: true